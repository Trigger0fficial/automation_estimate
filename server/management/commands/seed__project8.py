from django.core.management.base import BaseCommand
from server.models import (
    Project, Task, SettingTask, Staff, Department,
    ReportingTask, FeedbackCustomer, AdditionalCosts
)
from django.utils import timezone
from datetime import datetime, timedelta
import random

class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á —Å –ø—Ä–∏–≤—è–∑–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤'

    def handle(self, *args, **kwargs):
        self.stdout.write(self.style.SUCCESS("üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–¥–∞—á"))
        self.generate_project_with_tasks()
        self.stdout.write(self.style.SUCCESS("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"))

    def generate_project_with_tasks(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º
        staff_by_role = {
            "backend": Staff.objects.filter(category="2", department__name="backend").first(),
            "integration": Staff.objects.filter(category="2", department__name="integration").first(),
            "devops": Staff.objects.filter(category="2", department__name="devops").first(),
            "database": Staff.objects.filter(category="2", department__name="database").first(),
            "frontend": Staff.objects.filter(category="2", department__name="frontend").first(),
            "ux_ui": Staff.objects.filter(category="2", department__name="ux_ui").first(),
        }

        if None in staff_by_role.values():
            self.stdout.write(self.style.ERROR("‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö backend, integration, devops"))
            return

        customer = Staff.objects.filter(category="3").first()
        if not customer:
            self.stdout.write(self.style.ERROR("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫ (category=3)"))
            return

        add_costs = AdditionalCosts.objects.order_by('?').first()
        if not add_costs:
            self.stdout.write(self.style.ERROR("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø–∏—Å—å –≤ AdditionalCosts"))
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        project = Project.objects.create(
            type="4",  # –¢–∏–ø: –∫—Ä—É–ø–Ω—ã–π
            name="–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è",
            data_start=datetime(2021, 3, 15).date(),
            data_end=datetime(2022, 11, 20).date(),
            additional_costs=add_costs,
            payment_client=7200000,
            total_cost=6700000,
            expected_costs=6550000,
            actual_costs=6480000,
            expected_profits=650000,
            actual_profits=720000,
            status="Finished"
        )

        # –£—á–∞—Å—Ç–Ω–∏–∫–∏ (12 —á–µ–ª–æ–≤–µ–∫), –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ - —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ —Ä–æ–ª–µ–π –∏ —Å–ø–∏—Å–∫–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        project.staff.set(list(staff_by_role.values()) + [customer])


        # –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –¥–≤—É–º—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: is_done –∏ is_report_approved
        tasks_by_role = {
            "backend": [
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞–º–∏ #1", "adopted_customer", 42, 51, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π ERP-—Å–∏—Å—Ç–µ–º–æ–π #2", "adopted_customer", 40, 38, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π #3", "adopted_customer", 38, 37, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π #4", "adopted_customer", 45, 43, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ —É—á–µ—Ç–∞ #5", "adopted_customer", 36, 54, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–°–∏—Å—Ç–µ–º–∞ –∞—É–¥–∏—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π #6", "adopted_customer", 32, 30, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel #7", "adopted_customer", 34, 32, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–æ–¥—É–ª—å –∂—É—Ä–Ω–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ #8", "adopted_customer", 28, 36, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Swagger #9", "adopted_customer", 26, 25, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–∏—Ç–∏–∫ –¥–æ—Å—Ç—É–ø–∞ #10", "adopted_customer", 22, 51, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–µ—Ö–∞–Ω–∏–∑–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤ #11", "adopted_customer", 33, 32, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ API #12", "adopted_customer", 40, 39, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π Celery #13", "adopted_customer", 35, 33, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ–≤ –∏ –º–µ—Ç—Ä–∏–∫ #14", "adopted_customer", 31, 59, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö #15", "adopted_customer", 29, 27, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π #16", "adopted_customer", 25, 53, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "frontend": [
                ("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞–º–∏ #1", "adopted_customer", 40, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–î–∞—à–±–æ—Ä–¥—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ #2", "adopted_customer", 36, 34, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–æ–≤ #3", "adopted_customer", 28, 27, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º #4", "adopted_customer", 24, 23, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ #5", "adopted_customer", 30, 29, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ #6", "adopted_customer", 26, 25, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ú–µ—Ö–∞–Ω–∏–∑–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π #7", "adopted_customer", 22, 21, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ #8", "adopted_customer", 20, 29, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü—Ä–∏–≤—è–∑–∫–∞ –∫ –∫–∞—Ä—Ç–∞–º –∞–∫—Ç–∏–≤–æ–≤ #9", "adopted_customer", 34, 33, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ—Å—Ç—å #10", "adopted_customer", 28, 26, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã #11", "adopted_customer", 18, 17, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–†–∞–±–æ—Ç–∞ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ #12", "adopted_customer", 23, 22, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê–Ω–∏–º–∞—Ü–∏—è –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å #13", "adopted_customer", 19, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º –∏ —Ç–∞–±–ª–∏—Ü #14", "adopted_customer", 25, 24, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –¥–∏–∞–ª–æ–≥–∏ #15", "adopted_customer", 27, 26, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ #16", "adopted_customer", 32, 40, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–∞–±–æ—Ç–∞ —Å WebSocket #17", "adopted_customer", 21, 20, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "integration": [
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ SAP #1", "adopted_customer", 40, 29, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ #2", "adopted_customer", 34, 33, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ REST-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤–Ω–µ—à–Ω–∏—Ö —Å–∏—Å—Ç–µ–º #3", "adopted_customer", 32, 30, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–º–ø–æ—Ä—Ç –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –∞–∫—Ç–∏–≤–æ–≤ #4", "adopted_customer", 30, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å IoT-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ #5", "adopted_customer", 26, 24, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫ #6", "adopted_customer", 22, 21, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ —É—á–µ—Ç–∞ –¥–≤–∏–∂–µ–Ω–∏—è #7", "adopted_customer", 24, 43, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–∑–µ—Ä–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ SOAP #8", "adopted_customer", 118, 147, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "database": [
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ö–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–æ–≤ #1", "adopted_customer", 38, 46, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –ø–æ —Ç–∏–ø–∞–º –æ–±—ä–µ–∫—Ç–æ–≤ #2", "adopted_customer", 132, 140, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                (
                "–•—Ä–∞–Ω–∏–º—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤ #3", "adopted_customer", 28, 27, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–ø–ª–∏–∫–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ #4", "adopted_customer", 26, 25, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ #5", "adopted_customer", 22, 21, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂—É—Ä–Ω–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è PostgreSQL #6", "adopted_customer", 24, 22, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –±–∞–∑—ã #7", "adopted_customer", 120, 219, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ #8", "adopted_customer", 25, 13, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "devops": [
                ("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è CI/CD —á–µ—Ä–µ–∑ GitLab #1", "adopted_customer", 36, 34, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ Ansible #2", "adopted_customer", 30, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ Zabbix –∏ Prometheus #3", "adopted_customer", 28, 36, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏ Vault #4", "adopted_customer", 24, 23, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä–∞ #5", "adopted_customer", 32, 30, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–∫ –∫–æ–¥ (Terraform) #6", "adopted_customer", 26, 35, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "ux_ui": [
                (
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è #1", "adopted_customer", 28, 27, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–î–∏–∑–∞–π–Ω —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏ #2", "adopted_customer", 26, 25, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û—Ü–µ–Ω–∫–∞ UX –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ #3", "adopted_customer", 24, 22, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (a11y) #4", "adopted_customer", 120, 139, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–∫–µ—Ç–æ–≤ —Å Figma #5", "adopted_customer", 22, 26, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–£—á–∞—Å—Ç–∏–µ –≤ —é–∑–∞–±–∏–ª–∏—Ç–∏-—Ç–µ—Å—Ç–∞—Ö #6", "adopted_customer", 18, 5, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
        }

        base_date = datetime(2021, 3, 15)

        for role, task_list in tasks_by_role.items():
            staff_member = staff_by_role[role]
            for i, (title, status, planned, fact, result, is_done, is_report_approved) in enumerate(task_list):
                date_start = base_date + timedelta(days=i * 3)
                date_finish = date_start + timedelta(days=10)

                description = f"{title} ‚Äî –∑–∞–¥–∞—á–∞ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é {role}, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ø—Ä–æ–µ–∫—Ç–æ–º ERP. –ü–ª–∞–Ω: {planned}—á, —Ñ–∞–∫—Ç: {fact}—á."
                task = Task.objects.create(
                    name=title,
                    dsc=description,
                    type=role
                )

                # –õ–æ–≥–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–¥–∞—á–∏
                is_finished = is_done
                is_active = not is_finished
                is_started = not is_finished

                setting_task = SettingTask.objects.create(
                    staff=staff_member,
                    task=task,
                    scheduled_hours=planned,
                    scheduled_day=planned // 2,
                    actual_hours=fact,
                    actual_day=fact // 2,
                    status=status,
                    is_started=is_started,
                    is_active=is_active
                )

                # –û—Ç—á—ë—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å–æ–∑–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
                if is_done:
                    report = ReportingTask.objects.create(
                        data_start=date_start,
                        report_stuff=f"–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∑–∞–¥–∞—á–µ '{title}'",
                        is_adopted='adopted' if is_report_approved else 'rejected',
                        comment_director="–û–¥–æ–±—Ä–µ–Ω–æ" if is_report_approved else "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"
                    )
                    setting_task.reportings.add(report)

                    # –§–∏–¥–±—ç–∫ –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç—á—ë—Ç –ø—Ä–∏–Ω—è—Ç
                    if is_report_approved:
                        feedback = FeedbackCustomer.objects.create(
                            data_start=date_finish,
                            report_stuff=f"–§–∏–¥–±–µ–∫ –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–µ '{title}'",
                            is_adopted='adopted',
                            comment_director=result or "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
                        )
                        setting_task.feedback_customer.add(feedback)

                project.task.add(setting_task)