from django.core.management.base import BaseCommand
from server.models import (
    Project, Task, SettingTask, Staff, Department,
    ReportingTask, FeedbackCustomer, AdditionalCosts
)
from django.utils import timezone
from datetime import datetime, timedelta
import random

class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á —Å –ø—Ä–∏–≤—è–∑–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤'

    def handle(self, *args, **kwargs):
        self.stdout.write(self.style.SUCCESS("üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–¥–∞—á"))
        self.generate_project_with_tasks()
        self.stdout.write(self.style.SUCCESS("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"))

    def generate_project_with_tasks(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º
        staff_by_role = {
            "backend": Staff.objects.filter(category="2", department__name="backend").first(),
            "integration": Staff.objects.filter(category="2", department__name="integration").first(),
            "devops": Staff.objects.filter(category="2", department__name="devops").first(),
            "database": Staff.objects.filter(category="2", department__name="database").first(),
            "ml_ai": Staff.objects.filter(category="2", department__name="ml_ai").first(),
            "frontend": Staff.objects.filter(category="2", department__name="frontend").first(),
            "testing": Staff.objects.filter(category="2", department__name="testing").first(),
            "ux_ui": Staff.objects.filter(category="2", department__name="ux_ui").first(),
            "mobile": Staff.objects.filter(category="2", department__name="mobile").first(),
            "architecture": Staff.objects.filter(category="2", department__name="architecture").first(),
            "documentation": Staff.objects.filter(category="2", department__name="documentation").first(),
        }

        if None in staff_by_role.values():
            self.stdout.write(self.style.ERROR("‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö backend, integration, devops"))
            return

        customer = Staff.objects.filter(category="3").first()
        if not customer:
            self.stdout.write(self.style.ERROR("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫ (category=3)"))
            return

        add_costs = AdditionalCosts.objects.order_by('?').first()
        if not add_costs:
            self.stdout.write(self.style.ERROR("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø–∏—Å—å –≤ AdditionalCosts"))
            return

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        project = Project.objects.create(
            type="3",  # –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: –±–æ–ª—å—à–æ–π
            name="–í–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏",
            data_start=datetime(2023, 3, 1).date(),
            data_end=datetime(2024, 5, 15).date(),
            additional_costs=add_costs,
            payment_client=4800000,
            total_cost=4400000,
            expected_costs=4200000,
            actual_costs=4150000,
            expected_profits=600000,
            actual_profits=650000,
            status="Finished"
        )
        # –£—á–∞—Å—Ç–Ω–∏–∫–∏ (12 —á–µ–ª–æ–≤–µ–∫), –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ - —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ —Ä–æ–ª–µ–π –∏ —Å–ø–∏—Å–∫–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        project.staff.set(list(staff_by_role.values()) + [customer])


        # –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –¥–≤—É–º—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: is_done –∏ is_report_approved
        tasks_by_role = {

            "backend": [
                ("–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST API –¥–ª—è –º–æ–¥—É–ª–µ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "adopted_customer", 48, 46, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ Django", "adopted_customer", 152, 239, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Å–∏—Å—Ç–µ–º", "adopted_customer", 35, 38, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ ORM", "adopted_customer", 28, 26, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–µ—Ä—Å–∏–π API", "adopted_customer", 24, 23, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏", "adopted_customer", 32, 35, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏", "adopted_customer", 30, 29, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–µ–π –∑–∞–¥–∞—á (Celery)", "adopted_customer", 26, 24, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π", "adopted_customer", 38, 38, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞", "adopted_customer", 20, 18, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "frontend": [
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ SPA-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ Vue.js", "adopted_customer", 50, 67, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å backend API", "adopted_customer", 42, 40, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º", "adopted_customer", 38, 36, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–∞–∑–º–µ—Ç–∫–∞ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", "adopted_customer", 35, 23, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ PWA (–ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)", "adopted_customer", 30, 27, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è", "adopted_customer", 26, 24, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", "adopted_customer", 28, 40, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", "adopted_customer", 24, 21, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "integration": [
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM-—Å–∏—Å—Ç–µ–º–æ–π Bitrix", "adopted_customer", 44, 46, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û–±—Ä–∞–±–æ—Ç–∫–∞ API –æ—Ç 1–°", "adopted_customer", 36, 34, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç—ë–∂–Ω—ã–º–∏ —à–ª—é–∑–∞–º–∏", "adopted_customer", 40, 48, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("Webhooks –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–∏—Å—Ç–µ–º", "adopted_customer", 30, 58, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("OAuth 2.0 –∏ SSO –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", "adopted_customer", 26, 35, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", "adopted_customer", 22, 20, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–µ–π—Å–æ–≤", "adopted_customer", 24, 33, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "database": [
                ("–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î", "adopted_customer", 48, 45, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤", "adopted_customer", 40, 38, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏", "adopted_customer", 30, 28, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ SQL-—Ñ—É–Ω–∫—Ü–∏–π", "adopted_customer", 28, 36, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", "adopted_customer", 24, 23, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö", "adopted_customer", 26, 25, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ", "adopted_customer", 22, 21, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê–Ω–∞–ª–∏–∑ –ø–ª–∞–Ω–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤", "adopted_customer", 30, 29, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "devops": [
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD GitLab", "adopted_customer", 46, 44, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è –≤ Docker", "adopted_customer", 42, 39, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ Grafana –∏ Prometheus", "adopted_customer", 35, 33, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è", "adopted_customer", 38, 36, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ AWS", "adopted_customer", 30, 29, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏ (Vault)", "adopted_customer", 28, 26, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "ml_ai": [
                ("–ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", "adopted_customer", 34, 32, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞", "adopted_customer", 40, 37, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤", "adopted_customer", 32, 29, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –Ω–∞ –¥–∞–Ω–Ω—ã—Ö CRM", "adopted_customer", 30, 38, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –≤ backend", "adopted_customer", 26, 24, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ A/B —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ", "adopted_customer", 24, 32, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "mobile": [
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Flutter-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "adopted_customer", 48, 45, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "adopted_customer", 40, 37, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã", "adopted_customer", 36, 34, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–†–∞–±–æ—Ç–∞ —Å –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–æ–º", "adopted_customer", 28, 25, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö", "adopted_customer", 30, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "testing": [
                ("–ù–∞–ø–∏—Å–∞–Ω–∏–µ unit-—Ç–µ—Å—Ç–æ–≤ backend", "adopted_customer", 35, 42, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("E2E —Ç–µ—Å—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞", "adopted_customer", 38, 36, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API", "adopted_customer", 28, 36, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–°—Ü–µ–Ω–∞—Ä–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞", "adopted_customer", 30, 28, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã", "adopted_customer", 24, 43, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
            "ux_ui": [
                ("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ UX-–∫–∞—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", "adopted_customer", 42, 40, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True,
                 True),
                ("–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", "adopted_customer", 36, 34, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", "adopted_customer", 30, 48, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", "adopted_customer", 28, 45, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("UI-–≥–∞–π–¥–ª–∞–π–Ω –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", "adopted_customer", 32, 30, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "documentation": [
                ("–°–æ–∑–¥–∞–Ω–∏–µ Swagger-—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏", "adopted_customer", 24, 42, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–û–ø–∏—Å–∞–Ω–∏–µ REST API", "adopted_customer", 20, 18, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ Confluence", "adopted_customer", 18, 17, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "adopted_customer", 22, 21, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
            ],
            "architecture": [
                ("–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤", "adopted_customer", 46, 44, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", "adopted_customer", 40, 38, "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", True, True),
                ("–í—ã–±–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å—Ç–µ–∫–æ–≤", "adopted_customer", 36, 45, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
                ("–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –∞—É–¥–∏—Ç —Ä–µ—à–µ–Ω–∏–π", "adopted_customer", 28, 26, "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π", True, True),
            ],
        }



        base_date = datetime(2023, 3, 1)

        for role, task_list in tasks_by_role.items():
            staff_member = staff_by_role[role]
            for i, (title, status, planned, fact, result, is_done, is_report_approved) in enumerate(task_list):
                date_start = base_date + timedelta(days=i * 3)
                date_finish = date_start + timedelta(days=10)

                description = f"{title} ‚Äî –∑–∞–¥–∞—á–∞ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é {role}, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ø—Ä–æ–µ–∫—Ç–æ–º ERP. –ü–ª–∞–Ω: {planned}—á, —Ñ–∞–∫—Ç: {fact}—á."
                task = Task.objects.create(
                    name=title,
                    dsc=description,
                    type=role
                )

                # –õ–æ–≥–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–¥–∞—á–∏
                is_finished = is_done
                is_active = not is_finished
                is_started = not is_finished

                setting_task = SettingTask.objects.create(
                    staff=staff_member,
                    task=task,
                    scheduled_hours=planned,
                    scheduled_day=planned // 2,
                    actual_hours=fact,
                    actual_day=fact // 2,
                    status=status,
                    is_started=is_started,
                    is_active=is_active
                )

                # –û—Ç—á—ë—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å–æ–∑–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
                if is_done:
                    report = ReportingTask.objects.create(
                        data_start=date_start,
                        report_stuff=f"–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∑–∞–¥–∞—á–µ '{title}'",
                        is_adopted='adopted' if is_report_approved else 'rejected',
                        comment_director="–û–¥–æ–±—Ä–µ–Ω–æ" if is_report_approved else "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"
                    )
                    setting_task.reportings.add(report)

                    # –§–∏–¥–±—ç–∫ –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç—á—ë—Ç –ø—Ä–∏–Ω—è—Ç
                    if is_report_approved:
                        feedback = FeedbackCustomer.objects.create(
                            data_start=date_finish,
                            report_stuff=f"–§–∏–¥–±–µ–∫ –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–µ '{title}'",
                            is_adopted='adopted',
                            comment_director=result or "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
                        )
                        setting_task.feedback_customer.add(feedback)

                project.task.add(setting_task)